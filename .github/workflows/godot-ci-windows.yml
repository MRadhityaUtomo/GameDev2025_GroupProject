# Nama workflow yang akan tampil di tab Actions GitHub
name: Godot Export Windows

# Pemicu (trigger) kapan workflow ini akan dijalankan
on:
  push:
    branches: [ master ] # Jalankan saat ada push ke branch 'main'
  workflow_dispatch: # Memungkinkan menjalankan workflow secara manual dari tab Actions

jobs:
  export-windows:
    # Nama job (bisa lebih dari satu job dalam satu workflow)
    name: Export for Windows
    # Tentukan runner (mesin virtual) yang akan digunakan
    # Kita butuh Windows untuk build .exe dan menjalankan Godot export
    runs-on: ubuntu-latest # Kita akan gunakan container Docker Godot, jadi OS runner tidak terlalu krusial

    steps:
      # Langkah 1: Checkout kode proyek Anda dari repositori
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          lfs: true # Tambahkan ini jika Anda menggunakan Git LFS untuk aset besar

      # Langkah 2: Setup Godot Export (menggunakan action komunitas)
      # Action ini akan mengunduh template ekspor Godot yang diperlukan
      - name: Set up Godot export templates
        uses: chickensoft-games/setup-godot@v1 # Action komunitas yang populer
        with:
          godot-version: '4.4.1' # Ganti dengan versi Godot yang Anda gunakan
          # Optional: jika butuh .NET/C# support
          # use-mono: true
          # Optional: tentukan versi template jika berbeda
          # template-version: '4.2.2'
          # Optional: tentukan cache untuk mempercepat build berikutnya
          # cache-key-prefix: ${{ github.job }}-${{ runner.os }}

      # Langkah 3: Ekspor Proyek Godot untuk Windows Desktop
      - name: Export Godot project
        # Gunakan 'godot' command yang disediakan oleh action 'setup-godot'
        # --headless: Menjalankan Godot tanpa editor GUI
        # --export-release "Windows Desktop": Menjalankan preset ekspor bernama "Windows Desktop" dalam mode rilis
        # ../artifacts/windows-build/YourGameName.exe: Path output untuk file .exe
        # ../YourGameName: Path ke direktori utama proyek Godot Anda (jika file .yml tidak di root)
        # Sesuaikan '../YourGameName' jika struktur proyek Anda berbeda
        # Sesuaikan "Windows Desktop" jika nama preset ekspor Anda berbeda
        # Sesuaikan 'YourGameName.exe' dengan nama game Anda
        run: |
          mkdir -p ../artifacts/windows-build
          godot --headless --export-release "Windows Desktop" ../artifacts/windows-build/YourGameName.exe ../GameDev2025_GroupProject

      # Langkah 4: Upload Artifact (hasil build)
      # Menyimpan file hasil build agar bisa diunduh dari halaman Actions
      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-build # Nama artifact yang akan muncul di GitHub
          path: ../artifacts/windows-build # Path ke folder yang berisi hasil build (.exe dan .pck)