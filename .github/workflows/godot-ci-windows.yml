# Nama workflow yang akan tampil di tab Actions GitHub
name: Godot Export Windows

# Pemicu (trigger) kapan workflow ini akan dijalankan
on:
  push:
    branches: [ master ] # Jalankan saat ada push ke branch 'master' atau 'main'
  workflow_dispatch: # Memungkinkan menjalankan workflow secara manual dari tab Actions

jobs:
  export-windows:
    # Nama job (bisa lebih dari satu job dalam satu workflow)
    name: Export for Windows
    # Tentukan runner (mesin virtual) yang akan digunakan
    runs-on: ubuntu-latest # Menggunakan Ubuntu

    steps:
      # Langkah 1: Checkout kode proyek Anda dari repositori
      # Ini juga akan checkout windows_debug_x86_64.exe dan windows_release_x86_64.exe jika ada di root
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          lfs: true # Gunakan jika template .exe atau aset lain ada di Git LFS

      # Langkah 2: Setup Godot executable (tanpa template download)
      - name: Set up Godot executable
        uses: chickensoft-games/setup-godot@v1
        with:
          version: '4.4.1' # Pastikan ini versi Godot yang Anda gunakan
          use-mono: true   # Still needed to get the correct Godot Mono executable

      # Langkah 3: Copy checked-out templates to expected location
      - name: Install Export Templates from Repository
        run: |
          # Define version and target directory
          GODOT_VERSION="4.4.1"
          TEMPLATE_DIR="/home/runner/.local/share/godot/export_templates/${GODOT_VERSION}.stable.mono"

          echo "Creating template directory: ${TEMPLATE_DIR}"
          mkdir -p "${TEMPLATE_DIR}"

          echo "Copying templates from repository root..."
          # Copy the files checked out in Step 1 to the location Godot expects
          # Assumes the .exe files are in the root of your repository
          cp windows_debug_x86_64.exe "${TEMPLATE_DIR}/"
          cp windows_release_x86_64.exe "${TEMPLATE_DIR}/"

      # DEBUG: List contents of expected template directory AFTER copying
      - name: Check for Export Templates
        run: |
          echo "Checking for templates in /home/runner/.local/share/godot/export_templates/4.4.1.stable.mono/"
          ls -la /home/runner/.local/share/godot/export_templates/4.4.1.stable.mono/ || echo "Directory not found or empty."

      # Langkah 4: Ekspor Proyek Godot untuk Windows Desktop
      - name: Export Godot project
        # Ganti 'YourGameName.exe' dengan nama executable yang Anda inginkan
        # Asumsi project.godot ada di root repo
        run: |
          mkdir -p artifacts/windows-build  # Buat direktori output di root repo
          # Export command assumes project.godot is in the current directory (repo root)
          godot --headless --export-release "Windows Desktop" artifacts/windows-build/YourGameName.exe .

      # Langkah 5: Upload Artifact (hasil build)
      # Menyimpan file hasil build agar bisa diunduh dari halaman Actions
      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-build # Nama artifact yang akan muncul di GitHub
          path: artifacts/windows-build # Path ke folder yang berisi hasil build (.exe dan .pck) relatif ke root repo